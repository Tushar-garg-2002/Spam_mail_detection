# -*- coding: utf-8 -*-
"""spam_mail_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yAehK7Vcvi-3pxmTy-_Cr3yqIvIyT-Wh
"""

import numpy as np
import pandas as pd
#divide data set into two parts train and test
from sklearn.model_selection import train_test_split 
#convert text to numerical values to understand it properly
from sklearn.feature_extraction.text import TfidfVectorizer 
#importing logistic regression function cause its best for binary sytem
from sklearn.linear_model import LogisticRegression 
#to find score using test data
from sklearn.metrics import accuracy_score

#data collection
#structuring the data
raw = pd.read_csv('/content/mail_data.csv')
data = raw.where((pd.notnull(raw)),'')

#labelling 
data.loc[data['Category'] == 'spam','Category' ] = 0
data.loc[data['Category'] == 'ham','Category' ] = 1

#initialising value
X = data['Message']
Y = data['Category']

#splitting the data set
# use tran_test_ split
# we assign it the set, then the percentage of test data, then we provide it with a seed using random state

x_train,x_test,y_train,y_test = train_test_split(X,Y, test_size=0.2,random_state=4)

#feature extraction == convert text to features
# we do it usign TfidfVectoriser
features = TfidfVectorizer(min_df = 1,stop_words = 'english', lowercase='true')
x_train_feature = features.fit_transform(x_train);
x_test_feature = features.transform(x_test);
y_train = y_train.astype('int')
y_test = y_test.astype('int')

#model
model = LogisticRegression()
model.fit(x_train_feature,y_train)

#finding accuracy
pred = model.predict(x_train_feature)
acc = accuracy_score(y_train,pred)
print(acc)

#testing
test = model.predict(x_test_feature)
accuracy = accuracy_score(y_test,test)
print(accuracy)

input = ["free free free, enroll now"]
feature = features.transform(input)

predict = model.predict(feature)
if predict[0] == 1:
  print("Ham")
else:
    print("spam")

